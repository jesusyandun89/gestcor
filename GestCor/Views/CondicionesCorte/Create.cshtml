@model GestCor.Models.Ytbl_CondicionesCorte

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Crear condición de corte</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Id_Corte)
            @Html.DropDownList("cortes", ViewData["cortes"] as SelectList, "- Seleccione un Corte -", htmlAttributes: new { @class = "form-control ddl", required = "required" })
            @Html.ValidationMessageFor(model => model.Id_Corte, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Provider)
            @Html.DropDownList("bancos", new List<SelectListItem>(), "- Seleccione un Banco -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Provider, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ciudad)
            @Html.DropDownList("ciudades", new List<SelectListItem>(), "- Seleccione una ciudad -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Ciudad, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PaymentMode)
            @Html.DropDownList("pagos", new List<SelectListItem>(), "- Seleccione una forma de pago -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.PaymentMode, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Business)
            @Html.DropDownList("negocios", new List<SelectListItem>(), "- Seleccione un negocio -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Business, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Company)
            @Html.DropDownList("empresas", new List<SelectListItem>(), "- Seleccione una empresa -", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Company, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsValid)
            @Html.RadioButtonFor(m => m.IsValid, "Y", new { @class = "radio-inline" }) Yes
            @Html.RadioButtonFor(m => m.IsValid, "N", new { @class = "radio-inline" }) No
            @Html.ValidationMessageFor(model => model.IsValid, "", new { @class = "text-danger" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section Scripts {
    <script type="text/javascript">
        $(document).ready(function () {
            $(".ddl").change(function () {
                $("#bancos").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/getPropiedadBancoList")',
                    dataType: 'json',
                    data: { id_progcorte: $(".ddl").val() },
                    success: function (turnos) {
                        $.each(turnos, function (i, turno) {
                            $("#bancos").append('<option value="' + turno.Value + '">' +
                                turno.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener los bancos disponibles ' + ex);
                    }
                });
                return false;
            });
            $(".ddl").change(function () {
                $("#ciudades").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/getProppiedadCiudadList")',
                    dataType: 'json',
                    data: { id_progcorte: $(".ddl").val() },
                    success: function (turnos) {
                        $.each(turnos, function (i, turno) {
                            $("#ciudades").append('<option value="' + turno.Value + '">' +
                                turno.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener las ciudades disponibles ' + ex);
                    }
                });
                return false;
            });
            $(".ddl").change(function () {
                $("#negocios").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/getPropiedadNegocioList")',
                    dataType: 'json',
                    data: { id_progcorte: $(".ddl").val() },
                    success: function (turnos) {
                        $.each(turnos, function (i, turno) {
                            $("#negocios").append('<option value="' + turno.Value + '">' +
                                turno.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener los negocios disponibles ' + ex);
                    }
                });
                return false;
            });
            $(".ddl").change(function () {
                $("#pagos").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/getPropiedadFormaPagoList")',
                    dataType: 'json',
                    data: { id_progcorte: $(".ddl").val() },
                    success: function (turnos) {
                        $.each(turnos, function (i, turno) {
                            $("#pagos").append('<option value="' + turno.Value + '">' +
                                turno.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener las formas de pago disponibles ' + ex);
                    }
                });
                return false;
            });
            $(".ddl").change(function () {
                $("#empresas").empty();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("/getPropiedadEmpresaList")',
                    dataType: 'json',
                    data: { id_progcorte: $(".ddl").val() },
                    success: function (turnos) {
                        $.each(turnos, function (i, turno) {
                            $("#empresas").append('<option value="' + turno.Value + '">' +
                                turno.Text + '</option>');
                        });
                    },
                    error: function (ex) {
                        alert('Error al obtener las empresas disponibles ' + ex);
                    }
                });
                return false;
            });
        });
    </script>
}

@Scripts.Render("~/bundles/jquery")

<div>
    @Html.ActionLink("Volver", "Index")
</div>
